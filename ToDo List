<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Todo App</title>
  <style>
    
    body {
      font-family: "Poppins", sans-serif;
      background: linear-gradient(135deg, #ff9a9e, #fad0c4, #fbc2eb, #a6c1ee);
      background-size: 400% 400%;
      animation: gradientBG 12s ease infinite;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
    }

    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    
    .app-container {
      background: rgba(255, 255, 255, 0.25);
      backdrop-filter: blur(12px);
      border-radius: 20px;
      padding: 30px;
      margin-top: 60px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.25);
      width: 100%;
      max-width: 450px;
      color: #333; 
    }

    h2 {
      text-align: center;
      margin-bottom: 25px;
      font-size: 28px;
      letter-spacing: 1px;
      color: #222; 
    }

    /* Input and Button container */
    .input-group {
      display: flex;
      gap: 12px;
    }

    #task-input {
      flex: 1;
      padding: 12px 14px;
      border: none;
      border-radius: 12px;
      font-size: 16px;
      outline: none;
      background: rgba(255, 255, 255, 0.9);
      color: #222;
    }
    #task-input:focus {
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }

    #add-task-btn {
      padding: 12px 18px;
      background: linear-gradient(135deg, #6a11cb, #2575fc);
      color: #fff;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      font-size: 16px;
      font-weight: 600;
      transition: transform 0.2s, box-shadow 0.3s;
    }
    #add-task-btn:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 15px rgba(37, 117, 252, 0.4);
    }

    /* Task List */
    ul {
      list-style: none;
      padding: 0;
      margin-top: 25px;
    }

    li {
      background: rgba(255, 255, 255, 0.85);
      border-radius: 12px;
      padding: 14px 16px;
      margin-bottom: 12px;
      font-size: 16px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: 0.3s;
      color: #222; 
    }
    li:hover {
      background: rgba(255, 255, 255, 0.95);
    }

    .completed {
      text-decoration: line-through;
      color: gray;
    }

    /* Task Buttons */
    li button {
      border: none;
      padding: 6px 10px;
      border-radius: 8px;
      cursor: pointer;
      font-size: 14px;
      margin-left: 6px;
      transition: 0.3s;
    }

    .complete-btn {
      background: #28a745;
      color: white;
    }
    .complete-btn:hover {
      background: #218838;
      transform: scale(1.1);
    }

    .delete-btn {
      background: #dc3545;
      color: white;
    }
    .delete-btn:hover {
      background: #c82333;
      transform: scale(1.1);
    }
  </style>
</head>
<body>
  <div class="app-container">
    <h2>üåü Todo List</h2>
    <div class="input-group">
      <input type="text" id="task-input" placeholder="Enter task">
      <button id="add-task-btn">Add</button>
    </div>
    
    <ul id="task-list">
        
    </ul>
  </div>

  <script>
    const taskInput = document.getElementById("task-input");
    const addTaskBtn = document.getElementById("add-task-btn");
    const taskList = document.getElementById("task-list");

    function addTask() {
      const taskText = taskInput.value.trim();
      if (taskText === "") return;

      const li = document.createElement("li");
      li.innerHTML = `
        <span>${taskText}</span>
        <div>
          <button class="complete-btn">‚úî</button>
          <button class="delete-btn">‚ùå</button>
        </div>
      `;

      // Mark as completed
      li.querySelector(".complete-btn").addEventListener("click", () => {
        li.querySelector("span").classList.toggle("completed");
      });

      // Delete task
      li.querySelector(".delete-btn").addEventListener("click", () => {
        li.remove();
      });

      taskList.appendChild(li);
      taskInput.value = "";
    }

    addTaskBtn.addEventListener("click", addTask);
    taskInput.addEventListener("keypress", (e) => {
      if (e.key === "Enter") addTask();
    });
  </script>
</body>
</html>
